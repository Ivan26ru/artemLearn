<?php

$name = "Артём";

echo "Привет " . $name ."<br>";
var_dump($name);

$a = 1234; // десятичное число
$a = 0123; // Восьмеричное число(в десятичной системе = 83)
$a = 0o123; // Восьмеричное число
$a = 0x1A; // Шестнадцатеричное число(в десятичной системе = 23)
$a = 0b11111111; // Двоичное число(в десятичной системе = 255)
$a = 1_234_567; // Десятичное число
// Целые числа
$large_number = 50000000000000000000;
var_dump($large_number); // float (5.0E+19)
var_dump(PHP_INT_MAX+1); // В 32-разрядной системе system: float(2147483648) // В 64-разрядной системе: float(9.2233720368548E+18)
// Переполнения целых чисел
var_dump(25/7); // float(3,571428571428571) - округление
var_dump((int)(25/7)); // float(3) - округление в меньшую сторону
var_dump(round(25/7)); // float(4) - округление в большую сторону
// Деление
function foo($value): int
{
    return $value;
}
var_dump(foo(8.1)); // как я понимаю до PHP 8.1.0 выдавалась не число, а что-то типа ошибки
var_dump((int) 8.1);
var_dump(intval(8.1));
// Приведение из числа с плавающей точкой
echo 'Простая строка', PHP_EOL;
echo 'Переводы строки внутри кавычек становятся частью строкового значения и корректно обрабатывается', PHP_EOL;
echo 'Однажды Арнольд сказал: "I\' be back"', PHP_EOL;
// Выводит: Однажды Арнольд сказал: "I' be back"
echo 'Вы удалили C:\\*.*?', PHP_EOL;
// Выводит: Вы удалили C:\*.*
echo 'Вы удалили C:\*.*?', PHP_EOL;
// Выводит: Вы удалили C:\*.*?
// (Символ * не относится к спецсимволам и не образует в паре с обратным слешем управляющую последовательность,
// поэтому обратный слеш не экранирует символ * и выводится как есть — прим. перев.
echo 'В одинарных кавычках управляющая последовательность \n не разворачивается в символ перевода строки', PHP_EOL;
echo 'Переменные $expand и $either также не разворачиваются', PHP_EOL;
// Одинарные кавычки
echo <<<END
      a
     b
    c
\n
END;
// Без отступа перед маркером закрытия
echo <<<END
      a
     b
    c
    END;
// Отступ в четыре пробела перед маркером закрытия








?>